---
import { basics } from "@cv";
import LinkedIn from "@/components/Icon/LinkedIn.astro";
import Github from "@/components/Icon/Github.astro";
import Email from "@/components/Icon/Email.astro";
import World from "@/components/Icon/World.astro";
import ToggleTheme from "@/components/Icon/ToggleTheme.astro";

const { name, label, location, profiles, email, image } = basics;
const { city, region } = location;

const linkedInfo = profiles.find(({ network }) => network === "LinkedIn");
const linkedUrl = linkedInfo?.url;
const printInfo = [email, linkedUrl].filter(Boolean).join(" • ");

const CONTACT_ICONS = [LinkedIn, Github];
---

<section>
  <div class="container">
    <div class="info">
      <h1>{name}</h1>
      <h2>{label}</h2>
      <p class="location">
        <World />
        <span>{city}, {region}</span>
      </p>
      <footer class="print">
        {printInfo}
      </footer>
      <footer class="no-print">
        {
          email && (
            <a
              href={`mailto:${email}`}
              title={`Enviar un correo electrónico a ${name} al correo ${email}`}
              target="_blank"
              rel="noopener noreferrer"
            >
              <Email class="icons" />
            </a>
          )
        }
        {
          profiles.map(({ network, url, username, show }, index) => {
            const Icon = CONTACT_ICONS[index] || "div";

            return (
              show && (
                <a
                  href={url}
                  title={`Visitar el perfil de ${name} en ${network}`}
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  <Icon class="icons" />
                </a>
              )
            );
          })
        }
        <label class="changeThemeContainer" for="checkbox">
          <input type="checkbox" id="checkbox" />
          <button class="btn-toggle-theme" title="Cambiar tema de la página">
            <ToggleTheme />
          </button>
        </label>
      </footer>
    </div>
    <figure>
      <img
        class="profile"
        src={image}
        alt={name}
        loading="eager"
      />
    </figure>
  </div>
</section>
<style>
  .container {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    gap: 1rem;
    margin-top: 5rem;
  }

  .info {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    padding-right: 32px;
  }

  .info h1 {
    font-size: 2rem;
  }

  h2 {
    color: var(--color-text);
    font-weight: 500;
    font-size: 1.1rem;
    text-wrap: balance;
  }

  img.profile {
    aspect-ratio: 1/1;
    object-fit: cover;
    width: 140px;
    height: 128px;
    border-radius: 16px;
  }

  p.location {
    display: flex;
    align-items: center;
    gap: 0.25rem;
  }

  span {
    color: var(--color-text);
    font-size: 0.8rem;
  }

  footer {
    color: var(--color-text);
    font-size: 0.65rem;
    display: flex;
    gap: 4px;
    margin-top: 8px;
  }

  footer a {
    color: var(--accent-color);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: 1px solid var(--accent-color);;
    padding: 4px;
    height: 32px;
    width: 32px;
    border-radius: 6px;
    transition: all 0.3s ease;
  }

  input[type="checkbox"] {
    display: none;
  }

  .changeThemeContainer button.btn-toggle-theme {
    color: var(--accent-color);;
    background: transparent;
    border: 1px solid var(--accent-color);
    border: 1px solid var(--accent-color);
    padding: 4px;
    height: 32px;
    width: 32px;
    border-radius: 6px;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  footer button.btn-toggle-theme:hover {
    cursor: pointer;
    color: var(--accent-color);
  }

  footer a:hover {
    background-color: #eeeeee30;
    border: 1px solid var(--accent-color);
  }

  .icons {
    width: 30px;
    height: 30px;
  }

  @media (width <= 700px) {
    .container {
      flex-direction: column-reverse;
    }

    .info {
      justify-content: center;
      align-items: center;
      padding-right: 0;
      text-align: center;
    }

    figure {
      display: flex;
      justify-content: center;
      align-items: center;
    }

    h2 {
      text-wrap: balance;
    }

    figure {
      margin: 0 auto;
    }
  }

  @media print {
    .container {
      margin-top: 0;
    }
  }
</style>
<script>
  function toggleTheme() {
    const currentTheme = document.documentElement.getAttribute('data-theme');
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    document.documentElement.setAttribute('data-theme', newTheme);
    localStorage.setItem('theme', newTheme);
  }

  window.addEventListener('DOMContentLoaded', () => {
    const savedTheme = localStorage.getItem('theme') || 'light';
    document.documentElement.setAttribute('data-theme', savedTheme);

    const checkbox: any = document.getElementById('checkbox');
    checkbox.checked = savedTheme === 'dark';
  });

  document.querySelector(".btn-toggle-theme").addEventListener("click", toggleTheme)
</script>